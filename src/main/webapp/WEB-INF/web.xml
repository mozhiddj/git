<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns="http://java.sun.com/xml/ns/javaee"
 xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" 
 version="3.0">
  <display-name>Archetype Created Web Application</display-name>
  <!-- 加载Spring容器配置 -->  
    <listener>  
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  
    </listener>  
      <!-- Spring容器加载所有的配置文件的路径 -->  
    <context-param>  
        <param-name>contextConfigLocation</param-name>  
        <param-value>classpath:spring.xml</param-value>  
    </context-param>  
    <!-- 配置SpringMVC核心控制器,将所有的请求(除了刚刚Spring MVC中的静态资源请求)都交给Spring MVC -->  
    <servlet>  
        <servlet-name>springMvc</servlet-name>  
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  
        <init-param>  
            <param-name>contextConfigLocation</param-name>  
            <param-value>classpath:spring-mvc.xml</param-value>  
        </init-param>  
        <!--用来标记是否在项目启动时就加在此Servlet,0或正数表示容器在应用启动时就加载这个Servlet,  
        当是一个负数时或者没有指定时，则指示容器在该servlet被选择时才加载.正数值越小启动优先值越高  -->  
        <load-on-startup>1</load-on-startup>  
    </servlet>  
    <!--为DispatcherServlet建立映射-->  
    <servlet-mapping>  
        <servlet-name>springMvc</servlet-name>  
        <!-- 拦截所有请求,千万注意是(/)而不是(/*) -->  
        <url-pattern>/</url-pattern>  
    </servlet-mapping> 
     <!-- 指定监听器加载的log4j配置文件 -->
      <context-param>  
         <param-name>log4jConfigLocation</param-name>  
          <param-value>classpath:log4j.properties</param-value>  
      </context-param>  
         
      <listener>  
          <listener-class>  
              org.springframework.web.util.Log4jConfigListener  
         </listener-class>  
     </listener>
</web-app>
